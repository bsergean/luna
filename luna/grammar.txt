expr                        = ( factor ws op2 ws expr )
                                / ( op1 ws expr )
                                / factor
factor                      = ( "(" ws expr ws ")" )
                                / operand

operand                     = boolean / nil / number / string
op2                         = "==" / "~=" / "<" / ">" / "<=" / "=>"
                                / "+" / "-" / "*" / "/"
                                / "and" / "or"
op1                         = "-" / "not"
keyword                     = "break" / "do" / "else" / "elseif" / "end"
                                / "for" / "function" / "goto" / "if" / "in"
                                / "local" / "repeat" / "return"
                                / "then" / "until" / "while"

string                      = ( "'" ( "\\'" / ~"[^']" )* "'" )
                                / ( '"' ( '\\"' / ~'[^"]' )* '"' )
number                      = ~"[0-9]+[.][0-9]*" / ~"[0-9]*[.][0-9]+" / ~"[0-9]+"
identifier                  = ~"[_a-zA-Z][_a-zA-Z0-9]*"
boolean                     = "true" / "false"
nil                         = "nil"

ws                          = ~"\s*"
